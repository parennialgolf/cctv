// Simple authentication system with environment variable support
// For production deployment, set these as environment variables on your server

// Get credentials from environment variables or use defaults for development
const VALID_CREDENTIALS = {
  'admin': '${CCTV_ADMIN_PASSWORD}' || 'cctv2025',
  'viewer': '${CCTV_VIEWER_PASSWORD}' || 'cctv2025'
};

// Additional users can be added via environment variables
if ('${CCTV_MANAGER_PASSWORD}' && '${CCTV_MANAGER_PASSWORD}' !== '') {
  VALID_CREDENTIALS['manager'] = '${CCTV_MANAGER_PASSWORD}';
}

if ('${CCTV_GUEST_PASSWORD}' && '${CCTV_GUEST_PASSWORD}' !== '') {
  VALID_CREDENTIALS['guest'] = '${CCTV_GUEST_PASSWORD}';
}

// Session management - using sessionStorage for tab-based sessions
const AUTH_KEY = 'cctv_auth_session';

// Check if user is authenticated
function isAuthenticated() {
  const session = sessionStorage.getItem(AUTH_KEY);
  if (!session) return false;
  
  try {
    const sessionData = JSON.parse(session);
    return sessionData.username ? true : false;
  } catch (e) {
    sessionStorage.removeItem(AUTH_KEY);
    return false;
  }
}

// Create authentication session (expires when tab closes)
function createSession(username) {
  const sessionData = {
    username: username,
    loginTime: new Date().getTime()
  };
  
  sessionStorage.setItem(AUTH_KEY, JSON.stringify(sessionData));
}

// Get current user
function getCurrentUser() {
  const session = sessionStorage.getItem(AUTH_KEY);
  if (!session) return null;
  
  try {
    const sessionData = JSON.parse(session);
    return sessionData.username;
  } catch (e) {
    return null;
  }
}

// Handle login form submission
function handleLogin(event) {
  event.preventDefault();
  
  const username = document.getElementById('username').value.trim();
  const password = document.getElementById('password').value;
  const errorMessage = document.getElementById('errorMessage');
  
  // Validate credentials
  if (VALID_CREDENTIALS[username] && VALID_CREDENTIALS[username] === password) {
    // Create session
    createSession(username);
    
    // Redirect to main page
    window.location.href = 'cctv.html';
  } else {
    // Show error message
    errorMessage.style.display = 'block';
    document.getElementById('password').value = '';
    
    // Hide error message after 3 seconds
    setTimeout(() => {
      errorMessage.style.display = 'none';
    }, 3000);
  }
}

// Logout function
function logout() {
  sessionStorage.removeItem(AUTH_KEY);
  window.location.href = 'login.html';
}

// Protect page (call this on protected pages)
function protectPage() {
  if (!isAuthenticated()) {
    window.location.href = 'login.html';
    return false;
  }
  return true;
}

// Initialize authentication check when page loads
document.addEventListener('DOMContentLoaded', function() {
  // Only check auth if we're not on the login page
  if (!window.location.pathname.includes('login.html')) {
    protectPage();
  }
});

// Note: No need for auto-logout checks since sessionStorage 
// automatically clears when the tab/browser is closed
